<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Quantum</name>
    </assembly>
    <members>
        <member name="T:Quantum.Controllers.CommandController">
            <summary>
            快捷回复
            </summary>
        </member>
        <member name="M:Quantum.Controllers.CommandController.Get(Quantum.Entities.DTOs.CommandQuery)">
            <summary>
            获取所有快捷回复
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.CommandController.Delete(System.Collections.Generic.List{System.String})">
            <summary>
            删除快捷回复
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.CommandController.Add(Quantum.Entities.Model.CommandModel)">
            <summary>
            添加/修改快捷回复
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.CommandController.Disable(System.Collections.Generic.List{System.String})">
            <summary>
            禁用快捷回复
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.CommandController.Enable(System.Collections.Generic.List{System.String})">
            <summary>
            启用快捷回复
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.CqhttpController">
            <summary>
            cqhttp
            </summary>
        </member>
        <member name="M:Quantum.Controllers.CqhttpController.Add(Quantum.Entities.Model.CqhttpModel)">
            <summary>
            添加或者更新go-cqhttp
            </summary>
        </member>
        <member name="M:Quantum.Controllers.CqhttpController.Delete(System.String)">
            <summary>
            删除go-cqhttp配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.CqhttpController.Get">
            <summary>
            获取go-cqhtt配置信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.CustomDataController">
            <summary>
            自定义数据
            </summary>
        </member>
        <member name="M:Quantum.Controllers.CustomDataController.Get(System.String,Quantum.Entities.Model.CustomDataModel,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Int32,System.Int32)">
            <summary>
            获取自定义数据
            </summary>
            <param name="type">类型</param>
            <param name="queryModel">查询条件</param>
            <param name="createTimeStart">创建时间-起</param>
            <param name="createTimeEnd">创建时间-止</param>
            <param name="key">关键字</param>
            <param name="pageSize">分页大小</param>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.CustomDataController.Update(Quantum.Entities.Model.CustomDataModel)">
            <summary>
            更新数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.CustomDataController.Updates(System.Collections.Generic.List{Quantum.Entities.Model.CustomDataModel})">
            <summary>
            更新数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.CustomDataController.Add(System.Collections.Generic.List{Quantum.Entities.Model.CustomDataModel})">
            <summary>
            批量提交数据
            </summary>
        </member>
        <member name="M:Quantum.Controllers.CustomDataController.Delete(System.Collections.Generic.List{System.String})">
            <summary>
            删除数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.CustomDataTitleController">
            <summary>
            自定义数据表格头
            </summary>
        </member>
        <member name="M:Quantum.Controllers.CustomDataTitleController.Get(System.String)">
            <summary>
            获取自定义数据类型
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Quantum.Controllers.CustomDataTitleController.Get">
            <summary>
            获取所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.CustomDataTitleController.AddOrUpdate(Quantum.Entities.Model.CustomDataTitleModel)">
            <summary>
            添加自定义数据字段信息
            </summary>
        </member>
        <member name="T:Quantum.Controllers.DataMigrationController">
            <summary>
            数据迁移
            </summary>
        </member>
        <member name="T:Quantum.Controllers.EnumController">
            <summary>
            枚举接口
            </summary>
        </member>
        <member name="M:Quantum.Controllers.EnumController.Enums">
            <summary>
            获取所有枚举信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.EnumKeyValue">
            <summary>
            枚举对象Key-Value
            </summary>
        </member>
        <member name="P:Quantum.Controllers.EnumKeyValue.Key">
            <summary>
            显示字符串
            </summary>
        </member>
        <member name="P:Quantum.Controllers.EnumKeyValue.Value">
            <summary>
            枚举值
            </summary>
        </member>
        <member name="T:Quantum.Controllers.EnvController">
            <summary>
            环境变量
            </summary>
        </member>
        <member name="M:Quantum.Controllers.EnvController.Index(Quantum.Entities.DTOs.EnvQuery)">
            <summary>
            环境变量列表数据
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.EnvController.SyncEnv">
            <summary>
            同步环境变量
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.EnvController.UpdateWeight(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            更新环境变量权重
            </summary>
            <param name="weight"></param>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.EnvController.UpdateEnvPanel(Quantum.Entities.DTOs.UpdateEnvPanelRequest)">
            <summary>
            更新指定环境变量容器。
            </summary>
            <param name="qLPanelEnvs"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.EnvController.DeleteEnvs(System.Collections.Generic.List{System.String})">
            <summary>
            删除指定的环境变量(值)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.EnvController.Update(System.Collections.Generic.List{Quantum.Entities.DTOs.EnvModelPostModel})">
            <summary>
            更新环境变量
            </summary>
            <param name="envs"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.EnvController.Delete(System.Collections.Generic.List{System.String})">
            <summary>
            通过环境变量id 删除
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.EnvController.Query(System.String,System.String,System.Nullable{Quantum.Entities.EnvType},System.String)">
            <summary>
            查询环境变量
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.EnvController.DisableEnvs(System.Collections.Generic.List{System.String})">
            <summary>
            禁用环境变量（授权访问或localhost访问）
            </summary>
        </member>
        <member name="M:Quantum.Controllers.EnvController.EnableEnvs(System.Collections.Generic.List{System.String})">
            <summary>
            启用环境变量（授权访问或localhost访问）
            </summary>
        </member>
        <member name="M:Quantum.Controllers.EnvController.Disable(System.Collections.Generic.List{System.String})">
            <summary>
            禁用环境变量(id)（授权访问或localhost访问）
            </summary>
        </member>
        <member name="M:Quantum.Controllers.EnvController.Enable(System.Collections.Generic.List{System.String})">
            <summary>
            启用环境变量(id)（授权访问或localhost访问）
            </summary>
        </member>
        <member name="T:Quantum.Controllers.GroupManagementController">
            <summary>
            群管
            </summary>
        </member>
        <member name="M:Quantum.Controllers.GroupManagementController.Withdraw(Quantum.Entities.CommunicationType,System.String,System.String)">
            <summary>
            撤回消息（仅支持qq消息撤回，机器人需要是管理员身份）
            </summary>
            <param name="communicationType">通讯类型</param>
            <param name="communicationId">通讯工具ID</param>
            <param name="messageId">消息ID</param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.GroupManagementController.GroupBan(Quantum.Entities.CommunicationType,System.String,System.String,System.String,System.Int32)">
            <summary>
            QQ群禁言（仅支持QQ，机器人需要是管理员身份）
            </summary>
            <param name="communicationType">通讯类型</param>
            <param name="communicationId">通讯工具ID</param>
            <param name="group_id">群组id</param>
            <param name="user_id">用户id</param>
            <param name="duration">禁言时常，单位秒</param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.GroupManagementController.GroupKick(Quantum.Entities.CommunicationType,System.String,System.String,System.String,System.Boolean)">
            <summary>
            踢出群聊（仅支持QQ，微信，机器人需要是管理员身份）
            </summary>
            <param name="communicationType">通讯类型</param>
            <param name="communicationId">通讯工具ID</param>
            <param name="group_id">群组id</param>
            <param name="user_id">用户id</param>
            <param name="reject_add_request">是否拒绝此人加群请求(QQ选项)</param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.GroupManagementController.set_group_whole_ban(System.String,System.Boolean,System.String)">
            <summary>
            群组全员禁言？
            </summary>
            <param name="group_id">QQ群号</param>
            <param name="enable">是否禁言</param>
            <param name="notify"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.LoginController.Login(Quantum.Entities.Config.Setting)">
            <summary>
            用户登录
            </summary>
        </member>
        <member name="M:Quantum.Controllers.LoginController.Version">
            <summary>
            获取量子版本号
            </summary>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.LogsController">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Quantum.Controllers.LogsController.Index(Quantum.Entities.DTOs.LogQuery)">
            <summary>
            获取日志信息
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.LogsController.DeleteLogs(System.Collections.Generic.List{System.String})">
            <summary>
            批量删除日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.LogsController.ClearLogs">
            <summary>
            批量删除日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.LogsController.GetDetails(System.String)">
            <summary>
            获取详细日志
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.MessageController">
            <summary>
            Open Message
            </summary>
        </member>
        <member name="M:Quantum.Controllers.MessageController.GetMessage(System.String)">
            <summary>
            获取web用户消息
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.MessageController.Index(System.String,System.String)">
            <summary>
            接受web http 消息，IP 限流 5s 一次。
            </summary>
            <param name="message"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.MessageController.PostData(System.String,System.String)">
            <summary>
            接受web http 消息，IP 限流 5s 一次。
            </summary>
            <param name="message"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.NotifiyController">
            <summary>
            消息通知
            </summary>
        </member>
        <member name="M:Quantum.Controllers.NotifiyController.Send(Quantum.Entities.DTOs.SendNotifyDTO)">
            <summary>
            发送消息
            </summary>
        </member>
        <member name="M:Quantum.Controllers.OpenController.Auth(System.String)">
            <summary>
            通过AppKey获取授权Token，该Token有效期为10分钟
            </summary>
            <param name="AppKey"></param>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.QLConfigController">
            <summary>
            青龙配置文件管理
            </summary>
        </member>
        <member name="M:Quantum.Controllers.QLConfigController.QLFiles(System.String)">
            <summary>
            获取青龙配置文件列表
            </summary>
            <param name="qlId">青龙id</param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLConfigController.QLFile(System.String,System.String)">
            <summary>
            获取青龙配置文件内容
            </summary>
            <param name="qlId">青龙id</param>
            <param name="file">文件名</param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLConfigController.SaveFile(Quantum.Entities.Http.SaveQLFile)">
            <summary>
            保存青龙配置文件
            </summary>
            <param name="file">文本内容</param>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.QLPanelController">
            <summary>
            青龙面板
            </summary>
        </member>
        <member name="M:Quantum.Controllers.QLPanelController.Page(Quantum.Entities.DTOs.QL.QLPanelQueryModel)">
            <summary>
            获取分页青龙面板
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLPanelController.Index">
            <summary>
            获取所有青龙面板
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLPanelController.GetById(System.String)">
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLPanelController.Update(Quantum.Entities.Model.QLPanelModel)">
            <summary>
            更新青龙面板配置
            </summary>
            <param name="QLPanelModel"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLPanelController.Delete(System.String)">
            <summary>
            删除青龙面板
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLPanelController.GetToken">
            <summary>
            获取青龙配置，并包含最新的 认证token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLPanelController.RefreshToken">
            <summary>
            刷新青龙授权Token（授权或localhost访问）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLPanelController.RefreshLogin">
            <summary>
            刷新青龙登录状态（授权或localhost访问）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLPanelController.GetQLEnvs(System.String,System.String)">
            <summary>
            获取青龙环境变量
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLPanelController.DeleteEnvs(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            删除青龙容器环境变量
            </summary>
            <param name="id"></param>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLPanelController.AddEnvs(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            添加环境变量
            </summary>
            <param name="id"></param>
            <param name="envs"></param>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.QL.QLScriptsController">
            <summary>
            青龙脚本
            </summary>
        </member>
        <member name="M:Quantum.Controllers.QL.QLScriptsController.QLFiles(System.String)">
            <summary>
            获取青龙脚本列表
            </summary>
            <param name="qlId"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QL.QLScriptsController.QLFile(System.String,System.String,System.String)">
            <summary>
            获取青龙脚本内容
            </summary>
            <param name="qlId"></param>
            <param name="file"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QL.QLScriptsController.SaveFile(Quantum.Entities.Http.SaveQLFile)">
            <summary>
            修改青龙脚本内容
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.QLTaskController">
            <summary>
            青龙任务管理
            </summary>
        </member>
        <member name="M:Quantum.Controllers.QLTaskController.Get(Quantum.Entities.QL.QLTaskQuery)">
            <summary>
            获取青龙所有任务
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLTaskController.Run(System.Collections.Generic.List{Quantum.Entities.QL.QLTaskRun})">
            <summary>
            运行任务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLTaskController.Stop(System.Collections.Generic.List{Quantum.Entities.QL.QLTaskRun})">
            <summary>
            停止执行任务
            </summary>
            <param name="taskRuns"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLTaskController.Enable(System.Collections.Generic.List{Quantum.Entities.QL.QLTaskRun})">
            <summary>
            启用任务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLTaskController.Disable(System.Collections.Generic.List{Quantum.Entities.QL.QLTaskRun})">
            <summary>
            禁用任务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLTaskController.Delete(System.Collections.Generic.List{Quantum.Entities.QL.QLTaskRun})">
            <summary>
            删除任务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLTaskController.Update(Quantum.Entities.QL.QLongTask)">
            <summary>
            修改青龙任务
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QLTaskController.Log(System.String,System.String)">
            <summary>
            获取青龙脚本运行日志
            </summary>
            <param name="qlId">青龙id</param>
            <param name="scriptId">脚本id</param>
            <returns>日志文本</returns>
        </member>
        <member name="M:Quantum.Controllers.QLTaskController.Add(Quantum.Entities.QL.QLongTask)">
            <summary>
            添加青龙任务
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.QXController">
            <summary>
            VLW 微信通讯
            </summary>
        </member>
        <member name="M:Quantum.Controllers.QXController.Receive(System.String)">
            <summary>
            测试千寻回调地址。
            </summary>
        </member>
        <member name="M:Quantum.Controllers.QXController.Receive(System.String,Quantum.Entities.DTOs.QXReceiveEvent)">
            <summary>
            接受VLW 发送的消息
            </summary>
        </member>
        <member name="M:Quantum.Controllers.QXController.Add(Quantum.Entities.Model.WxHttpConfigModel)">
            <summary>
            添加或者更新VLW
            </summary>
        </member>
        <member name="M:Quantum.Controllers.QXController.Delete(System.String)">
            <summary>   
            删除VLW配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.QXController.Get">
            <summary>
            获取VLW配置信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.SystemConfigController">
            <summary>
            系统配置
            </summary>
        </member>
        <member name="M:Quantum.Controllers.SystemConfigController.UpdatePssword(Quantum.Entities.DTOs.UpdatePsswordRequest)">
            <summary>
            修改用户名密码
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.SystemConfigController.Update(Quantum.Entities.Config.Setting)">
            <summary>
            修改系统设置
            </summary>
        </member>
        <member name="M:Quantum.Controllers.SystemConfigController.GetFooter">
            <summary>
            获取自定义页脚信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.SystemConfigController.UpdateRepository">
            <summary>
            更新脚本库
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.SystemConfigController.Get">
            <summary>
            获取系统配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.SystemConfigController.Update">
            <summary>
            更新
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.SystemConfigController.DatabaseShrink">
            <summary>
            收缩数据库文件大小
            </summary>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.TaskController">
            <summary>
            脚本指令
            </summary>
        </member>
        <member name="M:Quantum.Controllers.TaskController.Index(Quantum.Entities.DTOs.TaskQuery)">
            <summary>
            获取所有的脚本指令
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.TaskController.GetById(System.String)">
            <summary>
            获取任务详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.TaskController.ExecTask(System.Collections.Generic.List{System.String})">
            <summary>
            执行脚本任务
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.TaskController.Scripts(System.String)">
            <summary>
            获取脚本字符串
            </summary>
            <param name="fileName">文件名</param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.TaskController.UpdateScripts(Quantum.Entities.Http.SaveQLFile)">
            <summary>
            更新脚本
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.TaskController.Update(Quantum.Entities.Model.TaskModel)">
            <summary>
            添加，更新任务
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.TaskController.Delete(System.Collections.Generic.List{System.String})">
            <summary>
            删除量子任务
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.TaskController.Export(System.String)">
            <summary>
            导出脚本指令
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.TaskController.Import">
            <summary>
            导入脚本指令
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.TaskController.Finish(System.String)">
            <summary>
            手动结束多步骤任务
            </summary>
            <param name="taskId">任务ID</param>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.UserController">
            <summary>
            用户接口
            </summary>
        </member>
        <member name="M:Quantum.Controllers.UserController.Index(Quantum.Entities.DTOs.UserQuery)">
            <summary>
            获取所有的用户
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.UserController.Delete(System.Collections.Generic.List{System.String})">
            <summary>
            删除用户
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.UserController.GetById(System.String)">
            <summary>
            通过用户Id获取用户信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.UserController.Update(Quantum.Entities.Model.AIOUserModel)">
            <summary>
            修改用户信息
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.UserController.GetBindingCode(System.String)">
            <summary>
            获取绑定码
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.UserController.DeductionIntegral(System.String,System.Int32,System.String)">
            <summary>
            扣除用户积分
            </summary>
            <param name="userId">用户id</param>
            <param name="integral">积分</param>
            <param name="remark">扣除备注</param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.UserController.ResetPassword(System.String)">
            <summary>
            重置用户密码
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.UserController.SetPassword(Quantum.Controllers.SetPasswordModel)">
            <summary>
            设置用户密码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.UserController.Register(Quantum.Controllers.SetPasswordModel)">
            <summary>
            用户注册
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.UserController.Login(Quantum.Controllers.SetPasswordModel)">
            <summary>
            web chat 登录
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Quantum.Controllers.VLWController">
            <summary>
            微信通讯
            </summary>
        </member>
        <member name="M:Quantum.Controllers.VLWController.TestReceive(System.String)">
            <summary>
            测试xyo httpapi回调地址
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.VLWController.Receive(System.String,Quantum.Entities.DTOs.VLW.ReceiveMessage)">
            <summary>
            接受VLW 发送的消息
            </summary>
            <param name="token">配置的token信息</param>
            <param name="data">消息体</param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.VLWController.Add(Quantum.Entities.Model.WxHttpConfigModel)">
            <summary>
            添加或者更新VLW
            </summary>
        </member>
        <member name="M:Quantum.Controllers.VLWController.Delete(System.String)">
            <summary>   
            删除VLW配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.VLWController.Get">
            <summary>
            获取VLW配置信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.WxmpController.Get">
            <summary>
            微信公众号列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.WxmpController.Delete(System.String)">
            <summary>
            删除公众号
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.WxmpController.AccessToken(System.String,System.Boolean)">
            <summary>
            获取wxmp access token
            </summary>
            <param name="appId">微信公众号 appId</param>
            <param name="refresh">是否刷新（如果发现过期，可以使用该参数刷新）</param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.WxmpController.AddOrUpdate(Quantum.Entities.Model.WxmpModel)">
            <summary>
            添加或者更新公众号配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.WxmpController.Post(System.String)">
            <summary>
            接受公众号post提交的消息数据
            </summary>
            <param name="appId"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.WxmpController.SendMessage(System.String,System.String,System.String)">
            <summary>
            测试给公众号主动发送消息
            </summary>
            <param name="appId"></param>
            <param name="userId"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.WxmpController.XmlToMessageFromWeiXin(System.String)">
            <summary>
                XML转消息对象
            </summary>
        </member>
        <member name="M:Quantum.Controllers.WxmpController.TryGetFirstTagText(System.Xml.XmlDocument,System.String,System.String@)">
            <summary>
            尝试取得XML中第一个指定标签的文本
            </summary>
            <param name="xml">xml文档对象</param>
            <param name="tag">指定的标签名</param>
            <param name="txt">取得的文本</param>
            <returns>是否成功取得</returns>
        </member>
        <member name="M:Quantum.Controllers.WxpusherController.Index(System.String,Quantum.Entities.DTOs.WxpusherCallback)">
            <summary>
            wxpush 回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:Quantum.Controllers.WxpusherController.CreateQrcode(System.String)">
            <summary>
            创建wxpusher 关注二维码url
            </summary>
            <returns></returns>
        </member>
        <member name="T:Quantum.Filters.CustomAuthorizationFilter">
            <summary>
            允许localhost 访问，如果不是localhost 访问则验证登录授权
            </summary>
        </member>
        <member name="M:Quantum.Program.CopyFolder(System.String,System.String)">
            <summary>
            复制源文件夹下的所有内容到新文件夹
            </summary>
            <param name="sources">源文件夹路径</param>
            <param name="dest">新文件夹路径</param>
        </member>
    </members>
</doc>
